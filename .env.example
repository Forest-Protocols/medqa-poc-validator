# Defines environment (dev or production)
NODE_ENV=production

# The RPC Node to be used in order to communicate with blockchain
RPC_HOST=127.0.0.1:8545

# The chain that the daemon will listen to
CHAIN=optimism-sepolia

# Database connection string to store daemon's state
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres

# Protocol address to be listened
PROTOCOL_ADDRESS=0x

# Maximum amount of time to be waited until a Resource is online
TIMEOUT_RESOURCE_TO_BE_ONLINE=5m

# When the validations are reached to this count, they will be committed to the blockchain.
MAX_VALIDATION_TO_COMMIT=20

# Enables blockchain listener to catch newly registered Offers and validates them
LISTEN_BLOCKCHAIN=true

# Fetches all active Agreements and closes all of them at daemon's startup. May slow down the startup process but be sure all of the opened Agreements are closed
CLOSE_AGREEMENTS_AT_STARTUP=true

# Closes the opened Agreements when interruption signal is received.
# If disabled, daemon will close without closing opened Agreements when the interruption
# signal is received. If you are going to disable this option it would be a good practice
# to enable CLOSE_AGREEMENTS_AT_STARTUP option. 
GRACEFUL_SHUTDOWN=true

# Closes the Epoch after the Reveal Window is over
CLOSE_EPOCH=true

# Emits the rewards across the Network after closing an Epoch. CLOSE_EPOCH must be true in order to do that.
EMIT_REWARDS=false


# Default wait time to load evaluation results from file to the database for
# "Human Evaluation" tests. If it is not defined on the implementation level,
# this value will be used
EVALUATION_WAIT_TIME=5m

# Validator private keys must be in this format
# VALIDATOR_PRIVATE_KEY_<validator tag>=
# BILLING_PRIVATE_KEY_<validator tag>=
# OPERATOR_PRIVATE_KEY_<validator tag>=
# Example:
VALIDATOR_PRIVATE_KEY_main=0x
BILLING_PRIVATE_KEY_main=0x
OPERATOR_PRIVATE_KEY_main=0x

# Custom smart contract addresses
# REGISTRY_ADDRESS=0x
# SLASHER_ADDRESS=0x
# TOKEN_ADDRESS=0x
# USDC_ADDRESS=0x

# Defines the log level
LOG_LEVEL=info

# Rate limit of the RPC
RPC_RATE_LIMIT=20

# Rate limit appliance for the time window
RPC_RATE_LIMIT_TIME_WINDOW=5s

# Maximum amount of Validation sessions can be executed at the same time.
# Usage of this value depends on the Executor implementation
MAX_CONCURRENT_VALIDATION=1

# Enables IntervalValidationExecutor which starts new Validation sessions
# in an interval. The Offers are randomly chosen. One Offer is 
# If the value is set to a range such as 0s-10s, the interval will be randomly chosen between that range
# If the value is set to a certain value such as 10m or 30s, it will use that value as the interval.
# If the VALIDATE_INTERVAL var is not declared, then it will be disabled. Just comment it out if no interval validation needed
VALIDATE_INTERVAL=3m

# Enables Protocol Validation executor where the implementation
# decides when a Validation session and with which Offers should be started.
# If you have customized `ProtocolValidationExecutor` class, you need to set
# this variable to `true` in order to use that class. 
PROTOCOL_VALIDATION_EXECUTOR=false
