# Defines environment (dev or production)
# > Optional - Default: dev
NODE_ENV=production

# The RPC Node to be used in order to communicate with blockchain
# > Required
RPC_HOST=127.0.0.1:8545

# The chain that the daemon will listen to
# > Required
# > Possible values: anvil, base, base-sepolia, optimism-sepolia, optimism
CHAIN=optimism-sepolia

# Database connection string to store daemon's state
# > Required
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres

# Protocol address to be listened
# > Required
PROTOCOL_ADDRESS=0x

# Maximum amount of time to be waited until a Resource is online
# > Required
TIMEOUT_RESOURCE_TO_BE_ONLINE=5m

# Max Validation session count to be included in one blockchain commitment.
# > Optional - Default: 20
MAX_VALIDATION_TO_COMMIT=20

# Enables blockchain listener to catch newly registered Offers and Validates them
# > Optional - Default: false
LISTEN_BLOCKCHAIN=true

# Fetches all active Agreements and closes all of them at daemon's startup. May slow down the startup process but be sure all of the opened Agreements are closed
# > Optional - Default: false
CLOSE_AGREEMENTS_AT_STARTUP=true

# Closes the opened Agreements when interruption signal is received.
# If disabled, daemon will close without closing opened Agreements when the interruption
# signal is received. If you are going to disable this option it would be a good practice
# to enable CLOSE_AGREEMENTS_AT_STARTUP option. 
# > Optional - Default: true
GRACEFUL_SHUTDOWN=true

# Closes the Epoch after the Reveal Window is over
# > Optional - Default: true
CLOSE_EPOCH=true

# Emits the rewards across the Network after closing an Epoch. CLOSE_EPOCH must be true in order to do that.
# > Optional - Default: false
EMIT_REWARDS=false

# Interval to check if the data is uploaded to the storage.
# > Optional - Default: 1m
UPLOAD_CHECKER_INTERVAL=1m

# Default wait time to load evaluation results from file to the database for
# "Human Evaluation" tests. If it is not defined on the implementation level,
# this value will be used
# > Optional - Default: 5m
EVALUATION_WAIT_TIME=5m

# Validator private keys must be in this format
# VALIDATOR_PRIVATE_KEY_<validator tag>=
# BILLING_PRIVATE_KEY_<validator tag>=
# OPERATOR_PRIVATE_KEY_<validator tag>=
# > Required at least one set of keys with a tag
VALIDATOR_PRIVATE_KEY_main=0x
BILLING_PRIVATE_KEY_main=0x
OPERATOR_PRIVATE_KEY_main=0x

# Custom smart contract addresses
# > Optional - Default: uses based on CHAIN
# REGISTRY_ADDRESS=0x
# SLASHER_ADDRESS=0x
# TOKEN_ADDRESS=0x
# USDC_ADDRESS=0x

# Defines the log level
# > Optional - Default: debug
LOG_LEVEL=info

# The type of the output
# Possible values are: "json", "pretty"
# > Optional, Default "json"
LOG_TYPE=json

# The Indexer service endpoint to fetch data about the Network (e.g Agreements, Offers)
# > Optional, Default https://indexer.forestai.io 
# INDEXER_ENDPOINT=https://indexer.forestai.io 

# Rate limit of the RPC
# > Optional - Default: 20
RPC_RATE_LIMIT=20

# Rate limit appliance for the time window
# > Optional - Default: 5s
RPC_RATE_LIMIT_TIME_WINDOW=5s

# Maximum amount of Validation sessions can be executed at the same time.
# Usage of this value depends on the Executor implementation
# > Optional - Default: 1
MAX_CONCURRENT_VALIDATION=1

# Enables IntervalValidationExecutor which starts new Validation sessions
# in an interval. The Offers are randomly chosen. One Offer is 
# If the value is set to a range such as 0s-10s, the interval will be randomly chosen between that range
# If the value is set to a certain value such as 10m or 30s, it will use that value as the interval.
# If the VALIDATE_INTERVAL var is not declared, then it will be disabled. Just comment it out if no interval validation needed
# > Optional
VALIDATE_INTERVAL=3m

# Enables Protocol Validation executor where the implementation
# decides when a Validation session and with which Offers should be started.
# If you have customized `ProtocolValidationExecutor` class, you need to set
# this variable to `true` in order to use that class.
# > Optional - Default: false
PROTOCOL_VALIDATION_EXECUTOR=false

# Specifies the uploaders that will be used to upload
# audit files of the Validation results after the reveal phase.
# If you have multiple uploaders, specify them as a comma-separated list.
# For example: ENABLED_UPLOADERS=PeerBench,IPFS
# The uploader name must match the uploader class name in the codebase without the `Uploader` suffix.
# > Optional
ENABLED_UPLOADERS=PeerBench

# The amount of prompts to be used against a Provider in a Validation session.
# > Optional - Default: 20
PROMPT_PER_VALIDATION=20
